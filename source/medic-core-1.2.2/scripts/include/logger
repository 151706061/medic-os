#!/bin/bash

load_timestamp()
{
  local path="$1"
  local directory="`dirname "$path"`"

  if [ "$timestamp" ]; then
    return 0
  fi

  if [ -f "$directory/logs/timestamp" ]; then
    timestamp="`cat "$directory/logs/timestamp" 2>/dev/null`"
  fi

  if [ -z "$timestamp" ]; then
    timestamp="`date +%Y%m%d-%H%M%S`"
    echo -n "$timestamp" > "$directory/logs/timestamp"
  fi

  if [ -z "$timestamp" ]; then
    return 1
  fi

  return 0
}

logger()
{
  local name="$1"
  local path="`readlink -f "$1"`"
  local directory="`dirname "$name"`" # Defaults to '.'

  local line=0
  local lines_denominator=''
  local safe_name="`echo "$name" | sed 's/\//-/g;' 2>/dev/null`"
  local expected_lines="`cat "$directory/stats/$safe_name.count" 2>/dev/null`"

  if [ -z "$expected_lines" ]; then
    expected_lines=0
  else
    lines_denominator=" of $expected_lines"
  fi

  pv -h &>/dev/null

  if [ $? -eq 0 ]; then
    while read x; do
      line=$[$line + 1]
      if [ "$line" -le "$expected_lines" ]; then
        echo "$x"
      else
        echo "$x" >> "$directory/logs/$safe_name-$timestamp.log"
      fi
    done | pv -petl -i 0.5 -N "$safe_name" -s "$expected_lines" \
      > "$directory/logs/$safe_name-$timestamp.log"

    local date="at `date +'%I:%M:%S%P'`"
    printf "\033[1A\r\033[K\r%9s: %s %s\n" \
      "$name" 'Build process completed' "$date" >&2
  else
    while read i; do
      line=$[$line + 1]
      echo "$i" >> "$directory/logs/$safe_name-$timestamp.log"
      printf '\r%9s: %s; %s' "$name" \
        'Estimate not yet available' \
        "$line$lines_denominator lines processed... " >&2
    done
    echo 'done.' >&2
  fi
}

