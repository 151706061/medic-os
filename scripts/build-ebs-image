#!/bin/sh

fatal()
{
  echo "Fatal: $*" >&2
  exit 111
}

usage()
{
  echo "Usage: $0 loopback_image description device"
  exit 1
}

wait_for_device()
{
  local device="$1"

  for i in `seq 1 10`; do
    if [ -b "$device" ]; then
      return 0
    fi
    sleep 5
  done

  return 1
}

wait_for_volume_availability()
{
  local volume_id="$1"

  sleep 20
}

wait_for_snapshot_availability()
{
  local snapshot_id="$1"

  sleep 20
}

main()
{
  local image="$1"
  local description="$2"
  local device="$3"

  if ! [ -f "$image" ]; then
    usage
  fi

  if [ -z "$description" ]; then
    usage
  fi

  if [ -z "$device" ]; then
    usage
  fi

  local volume_id="`
    ec2-create-volume -s1 \
      -z "$EC2_AVAILABILITY_ZONE" --region "$EC2_REGION" | cut -f2
  `" || fatal 'Failed to create volume'

  wait_for_volume_availability "$volume_id"

  ec2-attach-volume "$volume_id" -i "`
    ec2-metadata -i | cut -d: -f2 | sed 's/^ *//'
  `" -d "$device" &>/dev/null || fatal 'Failed to attach temporary volume'

  echo "Volume identifier: $volume_id" >&2

  wait_for_device "$device" \
    || fatal 'Volume did not attach during timeout period'

  sudo mkfs.ext4 "$device" &>/dev/null \
    || fatal "Failure while formatting device '$device'"

  sudo mkdir -p /mnt/startup &&
  sudo mount "$device" /mnt/startup \
    || fatal "Failure while mounting device '$device'"

  sudo mkdir -p /mnt/loopback &&
  sudo mount -o loop "$image" /mnt/loopback \
    || fatal "Failure while mounting loopback image '$image'"

  sudo cp -a /mnt/loopback/* /mnt/startup/ \
    || fatal 'Failure while copying files'

  sudo umount /mnt/loopback /mnt/startup && sudo sync \
    || fatal 'Failure while unmounting volumes'

  ec2-detach-volume --region "$EC2_REGION" "$volume_id" &>/dev/null \
    || fatal 'Failure while detaching volume'

  local snapshot_id="`
    ec2-create-snapshot "$volume_id" \
      --region "$EC2_REGION" -d "$description" | cut -f2 \
  `" || fatal "Failure while creating snapshot for volume '$volume_id'"

  wait_for_snapshot_availability "$snapshot_id"

  echo -n "Deleting temporary volume '$volume_id'... " >&2

  ec2-delete-volume "$volume_id" &>/dev/null \
    || fatal "Failure while deleting volume '$volume_id'"

  echo 'done.' >&2
  echo "Snapshot identifier: $snapshot_id"
}

main "$@"
exit "$?"

