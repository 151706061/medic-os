#!/bin/sh

monitor()
{
  local self="`realpath "$0"`"
  local base="`dirname "$self"`"

  source "$base/../env" &&
  merge_environment /srv

  local package='medic-core'
  local service='gammu'
  
  local last_device=''
  local settings_dir="/srv/storage/$package/$service/monitor"

  # Clean up:
  #  These files might be left-over from a previous boot.

  rm -f "$settings_dir/detected" "$settings_dir/detecting" &&
  mkdir -p "$settings_dir"

  # Main loop:
  #  Find the device that's currently in use. If it changes or
  #  goes away entirely, log the event and probe for a new one.
 
  while true; do
    local device="`"$base/gammu-status" gammu`"
    
    if [ -z "$device" ]; then
      rm -f "$settings_dir/detected"
      
      if [ "$last_device" ]; then
        warn "Device '$last_device' was lost"
      fi
      
      "$base/gammu-status" &>/dev/null

      if [ "$?" -eq 0 ]; then

        touch "$settings_dir/detecting"
        warn 'Possible device(s) found, running autodetection'

        device="`"$base/gammu-autodetect"`"
      
        if [ "$device" ]; then
          warn "Auto-detection found device '$device'"
          warn "Reloading '$package/$service' to add new device(s)..."

          echo "$device" > "$settings_dir/detected" &&
          /boot/svc-reload "$package" "$service"

          if [ "$?" -ne 0 ]; then
            rm -f "$settings_dir/detected"
            warn "Failed to restart '$package/$service'"
          fi
        fi

      fi
      
      rm -f "$settings_dir/detecting"
    fi

    last_device="$device"    
    sleep 1
  done
  
  return 1
}

warn()
{
  echo "`date`: Warning: $*" >&2
}

fatal()
{
  echo "`date`: Fatal: $*" >&2
  exit 1
}

main()
{
  monitor
  return "$?"
}

main
exit "$?"

