#!/bin/sh

detect()
{
  local self="`realpath "$0"`"
  local base="`dirname "$self"`"

  source "$base/../env" &&
  merge_environment /srv

  local user='gammu'
  local service='gammu'
  local package='medic-core'

  local storage_dir="/srv/storage/$package/$service"
  local settings_dir="/srv/settings/$package/$service"
  local settings_file="$settings_dir/autodetect.conf"
  
  local logs_dir="$storage_dir/logs"
  local log="$logs_dir/autodetect.log"
 
  for n in `seq 0 9`; do
    for type in USB ACM; do 

      local device="tty$type$n"
      local device_path="/dev/$device"

      # Check for existence of device:
      #   If the path is not a character-special device node, then
      #   skip over it to keep from filling logs and taking CPU time.

      if ! [ -c "$device_path" ]; then
        continue
      fi

      # Probe for device:
      #   Re-create configuration file, then attempt to identify device.

      rm -f "$settings_file" && mkdir -p "$logs_dir" &&
      echo "`date`: Auto-detect running for '$device_path'" >> "$log" &&
      \
      sed "s/ttyUSBX/$device/g;" < "$settings_file.template" \
        > "$settings_file" 2>/dev/null &&
      \
      gammu -c "$settings_file" identify >> "$log" 2>&1

      if [ "$?" -eq 0 ]; then

	# Take ownership and return full device path
        chown "$user:$user" "$device_path" && echo "$device_path"

	if [ "$?" -ne 0 ]; then
          warn "Failed to take ownership of '$device_path'"
          warn "Skipping device and continuing with auto-detection"
	  return 2
	fi
      fi

     done
  done

  return 1
}

main()
{
  detect
  return "$?"
}

main
exit "$?"

