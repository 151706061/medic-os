#!/bin/sh


install()
{
  local self="`realpath "$0"`"
  local base="`dirname "$self"`"

  local storage_dir='/srv/storage/medic-core'
  local settings_dir='/srv/settings/medic-core'

  source "$base/env" &&
  merge_environment '/srv/software'

  chown -R couchdb:staff \
    "$settings_dir/couchdb" "$storage_dir/couchdb"

  chown -R couchdb-lucene:staff \
    "$storage_dir/couchdb-lucene"

  chown -R gammu:staff \
    "$storage_dir/gammu" "$settings_dir/gammu"

  persist_ssh_user_configuration_files tc authorized_keys
  install_default_couchdb_databases "$PACKAGE_ROOT" "$storage_dir"
}


install_default_couchdb_databases()
{
  local package_root="$1"
  local storage_dir="$2"

  for garden_db in dashboard.couch; do
    local src="$package_root/share/couchdb/garden/$garden_db"
    local dst="$storage_dir/couchdb/data/$garden_db"

    if ! [ -f "$dst" ]; then
	cp -a "$src" "$dst" || return "$?"
    fi
  done

  return 0
}


persist_ssh_user_configuration_files()
{
  local user="$1"
  shift 1
  
  local ssh_dot_dir="/home/$user/.ssh"
  local ssh_settings_dir="/srv/settings/medic-core/openssh/user/$user"

  mkdir -p "$ssh_dot_dir" "$ssh_settings_dir" \
    || return "$?"

  for file in "$@"; do
    local src_path="$ssh_dot_dir/authorized_keys"
    local target_path="$ssh_settings_dir/authorized_keys"
    
    touch "$target_path" \
      || return "$?"

    if [ -f "$src_path" ]; then
      cat "$src_path" >> "target_path" \
        || return "$?"
    fi

    rm -f "$src_path" &&
    ln -sf "$target_path" "$src_path" &&
    chown "$user.staff" "$target_path" \
      || return "$?"
  done

  return 0
}


install "$@"
exit "$?"


